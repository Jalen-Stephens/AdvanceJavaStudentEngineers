<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath/>
	</parent>

	<!-- ===== Project Identity ===== -->
	<groupId>dev.coms4156.project</groupId>
	<artifactId>metadetect-service</artifactId>
	<version>0.1.0</version>
	<name>MetaDetect AI Image Detection Service</name>
	<description>Spring Boot service for image authenticity analysis.</description>

	<properties>
		<java.version>17</java.version>
		<!-- makes the built jar name nice -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- validation annotations for request DTOs -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- testing stack (JUnit 5, Mockito, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- API tests (optional but nice for iteration 1) -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Swagger/OpenAPI UI (optional but helpful for README) -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.6.0</version>
		</dependency>

		<!-- Database driver -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring Data (choose one; JDBC is simpler to start) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>

		<!-- Flyway core (PG17-aware) -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>11.14.1</version>
		</dependency>

		<!-- PostgreSQL database support module -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<version>11.14.0</version>
		</dependency>

		<!-- Metadata Extractor library -->
		<dependency>
  			<groupId>com.drewnoakes</groupId>
  			<artifactId>metadata-extractor</artifactId>
 			<version>2.18.0</version>
		</dependency>

		
		<dependency>
  			<groupId>com.fasterxml.jackson.core</groupId>
  			<artifactId>jackson-databind</artifactId>
  			<version>2.17.1</version>
		</dependency>


	</dependencies>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Checkstyle (already configured to run at validate) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals><goal>check</goal></goals>
					</execution>
				</executions>
			</plugin>

			<!-- PMD static analysis -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.21.2</version>
				<configuration>
					<printFailingErrors>true</printFailingErrors>
					<failOnViolation>true</failOnViolation>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals><goal>check</goal></goals>
					</execution>
				</executions>
			</plugin>

			<!-- JaCoCo coverage + 55% gate -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals><goal>prepare-agent</goal></goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals><goal>report</goal></goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<phase>verify</phase>
						<goals><goal>check</goal></goals>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.55</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
